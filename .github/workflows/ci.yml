name: software-engineering-lab-9

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      pgdb:
        image: postgres
        env:
          POSTGRES_DB: testdb
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpassword
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Docker
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Create .env file
        run: |
          echo "POSTGRES_NAME=testdb" >> .env
          echo "POSTGRES_USER=testuser" >> .env
          echo "POSTGRES_PASSWORD=testpassword" >> .env
          echo "DATABASE_PORT=5432" >> .env
          echo "DATABASE_HOST=pgdb" >> .env

      - name: Build Containers
        run: docker compose build

      - name: Start Containers
        run: docker compose up -d

      - name: Execute unit tests
        run: docker exec $(docker-compose ps -q django) python
          software_engineering/manage.py test software_engineering/myapp/tests
  docs:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up environment
        uses: actions/setup-python@v2
        with:
          python-version: 3.12

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt

      - name: Generate API documentation
        run: |
          . venv/bin/activate
          python software_engineering/manage.py generateschema > docs.json

      - name: Commit and push documentation
        run: |
          git config --global user.mail "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git add docs.json index.html
          git commit -m "Updated documentation"
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
